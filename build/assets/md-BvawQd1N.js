import{b as _,o as d,w as c,g as l,ad as n,v as r,x as i,T as e}from"./modules/vue-C3wmdS3C.js";import{I as a}from"./slidev/default-DWjjwV1l.js";import{u as s,f as p}from"./slidev/context-Cv_S9V0q.js";import"./index-BsII1Axt.js";import"./modules/shiki-D3-9XqGl.js";const T={__name:"slides.md__slidev_10",setup(j){const{$clicksContext:u,$frontmatter:t}=s();return u.setup(),(m,o)=>(d(),_(a,r(i(e(p)(e(t),9))),{default:c(()=>o[0]||(o[0]=[l("h1",null,"核心模块 II: 点云融合 (2/3) - 多视图深度一致性",-1),l("div",{class:"text-left"},[l("ul",null,[l("li",null,[l("strong",null,"3. 多视图深度一致性检查"),n(": "),l("ul",null,[l("li",null,[l("strong",null,"目的"),n(": 验证 "),l("code",null,"pointWorld_candidate"),n(" 是否在其他邻近视角下稳定存在，滤除因遮挡、噪声等产生的不可靠三维点。")]),l("li",null,[l("strong",null,"过程"),n(": "),l("ul",null,[l("li",null,[n("选取参考帧 "),l("code",null,"i"),n(" 前后各 "),l("code",null,"N_NEIGHBORS_EACH_SIDE"),n(" 个邻居帧 (以 "),l("code",null,"CONSISTENT_VIEW_STRIDE"),n(" 为步长跳跃选取，以获得足够基线，避免邻居帧过于相似)。")]),l("li",null,[n("对于每个选定的邻居帧 "),l("code",null,"j"),n(": "),l("ol",null,[l("li",null,[n("获取邻居帧 "),l("code",null,"j"),n(" 的相机参数 (内外参) 和深度图 (从预加载缓存 "),l("code",null,"neighbor_cache"),n(" 中读取)。")]),l("li",null,[n("将 "),l("code",null,"pointWorld_candidate"),n(" 从世界坐标系投影回该邻居帧 "),l("code",null,"j"),n(" 的相机坐标系，得到其在邻居帧中的三维坐标 "),l("code",null,"pointInNeighborCam_j"),n("，其中包含了投影深度 "),l("code",null,"projected_depth_in_neighbor_cam"),n("。")]),l("li",null,[n("再将 "),l("code",null,"pointInNeighborCam_j"),n(" 通过邻居帧 "),l("code",null,"j"),n(" 的内参投影到其图像平面，得到像素坐标 "),l("code",null,"(u_proj_j, v_proj_j)"),n("。")]),l("li",null,[l("strong",null,"有效性检查"),n(": 确保投影点 "),l("code",null,"(u_proj_j, v_proj_j)"),n(" 在邻居帧图像范围内，并且投影深度 "),l("code",null,"projected_depth_in_neighbor_cam"),n(" 为正。")]),l("li",null,[n("若有效，从邻居帧 "),l("code",null,"j"),n(" 的深度图中读取 "),l("code",null,"(u_proj_j, v_proj_j)"),n(" 处的实际深度值 "),l("code",null,"actual_depth_in_neighbor_image"),n(" (通常需要从视差或逆深度转换)。")]),l("li",null,[l("strong",null,"深度比较"),n(": 比较投影深度和实际观察到的深度。如果它们的相对差异小于预设的 "),l("code",null,"DEPTH_CONSISTENCY_THRESHOLD_RELATIVE"),n(" (例如 "),l("code",null,"abs(proj_depth - actual_depth) <= THRESHOLD * proj_depth"),n(")，则认为该邻居帧 "),l("code",null,"j"),n(" 与参考帧 "),l("code",null,"i"),n(" 在此点上是深度一致的，此时 "),l("code",null,"consistent_views_count"),n(" 加一。")])])])])]),l("li",null,[l("strong",null,"筛选"),n(": 只有当一个点的 "),l("code",null,"consistent_views_count"),n(" 大于等于动态计算的 "),l("code",null,"required_views_count"),n(" 时，该点 "),l("code",null,"pointWorld_candidate"),n(" 才被认为通过了深度一致性检查，得以保留进入下一步。")])])])])],-1)])),_:1,__:[0]},16))}};export{T as default};
