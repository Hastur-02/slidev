import{b as t,o as a,w as d,g as l,ad as n,v as c,x as s,T as u}from"./modules/vue-C3wmdS3C.js";import{I as m}from"./slidev/default-DWjjwV1l.js";import{u as i,f as _}from"./slidev/context-Cv_S9V0q.js";import"./index-BsII1Axt.js";import"./modules/shiki-D3-9XqGl.js";const I={__name:"slides.md__slidev_9",setup(p){const{$clicksContext:e,$frontmatter:r}=i();return e.setup(),(f,o)=>(a(),t(m,c(s(u(_)(u(r),8))),{default:d(()=>o[0]||(o[0]=[l("h1",null,"核心模块 II: 点云融合 (1/3) - 法线估计",-1),l("div",{class:"text-left"},[l("p",null,"点云融合的目标是将各个独立视角的采样点转换到统一的世界坐标系，并通过一系列评估来筛选和优化，最终形成场景的全局三维点云。"),l("ul",null,[l("li",null,[l("p",null,[l("strong",null,"1. 三维点生成"),n(" (回顾):")]),l("ul",null,[l("li",null,[n("对于参考帧中的每个有效采样点 "),l("code",null,"(u,v)"),n(" 及其深度值 "),l("code",null,"current_metric_depth"),n("。")]),l("li",null,[n("计算其在当前相机坐标系下的三维坐标 "),l("code",null,"pointCam"),n("。")]),l("li",null,[n("利用 "),l("code",null,"camToWorldTransform"),n(" 将 "),l("code",null,"pointCam"),n(" 转换到世界坐标系 "),l("code",null,"pointWorld_candidate"),n("。")])])]),l("li",null,[l("p",null,[l("strong",null,"2. 鲁棒法线计算"),n(" ("),l("code",null,"normal_world"),n("):")]),l("ul",null,[l("li",null,"准确的法线信息对于后续表面重建至关重要。"),l("li",null,[n("在相机坐标系下计算法线 "),l("code",null,"normal_cam"),n("： "),l("ul",null,[l("li",null,[l("strong",null,"梯度向量获取"),n(": 尝试使用中心差分（比较 "),l("code",null,"(u+1,v)"),n(" 和 "),l("code",null,"(u-1,v)"),n(" 等的3D点）计算x方向和y方向的梯度向量 "),l("code",null,"du"),n(", "),l("code",null,"dv"),n("。但前提是参与计算的邻近点的深度与中心点的深度差异在 "),l("code",null,"NORMAL_DEPTH_DIFF_THRESHOLD_ABS"),n(" 内，保证只在连续表面上计算。")]),l("li",null,[l("strong",null,"差分策略回退"),n(": 如果中心差分条件不满足（例如在深度不连续的边缘），则回退到单边差分（例如 "),l("code",null,"(u+1,v)"),n(" 和 "),l("code",null,"(u,v)"),n("）。")]),l("li",null,[l("strong",null,"法线计算"),n(": "),l("code",null,"normal_cam = normalize(cross(du, dv))"),n(" (或 "),l("code",null,"cross(dv, du)"),n("，取决于坐标系定义和期望法线方向)。")]),l("li",null,[l("strong",null,"失败情况处理"),n(": 若梯度获取均失败（例如孤立点或无法形成有效平面），则采用指向相机的向量（"),l("code",null,"-normalize(pointCam)"),n("）作为近似法线。")])])]),l("li",null,[l("strong",null,"法线方向统一"),n(": 确保 "),l("code",null,"normal_cam"),n(" 指向相机观察方向 (通过检查 "),l("code",null,"normal_cam.dot(pointCam)"),n(" 的符号，若小于0则通常表示正确，否则翻转)。")]),l("li",null,[l("strong",null,"坐标系转换"),n(": 将 "),l("code",null,"normal_cam"),n(" 通过 "),l("code",null,"camToWorldTransform"),n(" 的旋转部分变换到世界坐标系，并归一化得到 "),l("code",null,"normal_world"),n("。")])])])])],-1)])),_:1,__:[0]},16))}};export{I as default};
